// <auto-generated />
using System;
using EmployeesLeavesAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeesLeavesAPI.Migrations
{
    [DbContext(typeof(EmloyeeLeavesContext))]
    partial class EmloyeeLeavesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmployeesLeavesAPI.Models.EmployeeLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountOfDays")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("EmployeesLeaves");
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.EmployeeLeaveDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeLeaveId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLeaveId");

                    b.ToTable("EmployeeLeaveDetails");
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnnualLimit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnnualLimit = 7,
                            Name = "Casual"
                        },
                        new
                        {
                            Id = 2,
                            AnnualLimit = 14,
                            Name = "Schedual"
                        });
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.EmployeeLeave", b =>
                {
                    b.HasOne("EmployeesLeavesAPI.Models.EmployeeModel", "employee")
                        .WithMany("EmployeeLeaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeesLeavesAPI.Models.LeaveType", "leaveType")
                        .WithMany("EmployeeLeaves")
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("leaveType");
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.EmployeeLeaveDetail", b =>
                {
                    b.HasOne("EmployeesLeavesAPI.Models.EmployeeLeave", "employeeLeave")
                        .WithMany()
                        .HasForeignKey("EmployeeLeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employeeLeave");
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.EmployeeModel", b =>
                {
                    b.Navigation("EmployeeLeaves");
                });

            modelBuilder.Entity("EmployeesLeavesAPI.Models.LeaveType", b =>
                {
                    b.Navigation("EmployeeLeaves");
                });
#pragma warning restore 612, 618
        }
    }
}
